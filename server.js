// Generated by CoffeeScript 1.7.1
(function() {
  var Duplex, argv, backend, browserChannel, express, livedb, livedbMongo, port, share, sharejs, webserver, app, hat;

  Duplex = require('stream').Duplex;

  browserChannel = require('browserchannel').server;

  express = require('express');

  argv = require('optimist').argv;

  livedb = require('livedb');

  livedbMongo = require('livedb-mongo');

  sharejs = require('share');

  hat = require('hat');

  webserver = express();
  webserver.use(express.static(sharejs.scriptsDir));

  backend = livedb.client(livedbMongo('localhost:27017/test?auto_reconnect', {
    safe: false
  }));

  share = sharejs.server.createClient({
    backend: backend
  });

  webserver.use(browserChannel({
    webserver: webserver
  }, function(client) {
    var stream;
    stream = new Duplex({
      objectMode: true
    });
    stream._write = function(chunk, encoding, callback) {
      console.log('s->c ', chunk);
      if (client.state !== 'closed') {
        client.send(chunk);
      }
      return callback();
    };
    stream._read = function() {};
    stream.headers = client.headers;
    stream.remoteAddress = stream.address;
    client.on('message', function(data) {
      console.log('c->s ', data);
      return stream.push(data);
    });
    stream.on('error', function(msg) {
      return client.stop();
    });
    client.on('close', function(reason) {
      stream.emit('close');
      stream.emit('end');
      return stream.end();
    });
    return share.listen(stream);
  }));

  webserver.use('/doc', share.rest());

  webserver.get('/?', function (req, res, next) {
    var uuid;
    uuid = hat();
    res.writeHead(303, {location: '/openide.html#' + uuid});
    res.write('');
    res.end();
  });

  webserver.use(express.static(__dirname + "/site/"));

  port = argv.p || 8000;

  webserver.listen(port);

  console.log("Listening on http://localhost:" + port + "/");

}).call(this);
